################################################################################
#
# ISSUES
# ======
#
# FEDORA DOM0 + VM
#     chroot-dom0-fc31/etc/dnf/dnf.conf:
#     chroot-vm-fc31/etc/dnf/dnf.conf: (linux-scrypt-vm-fc31)
#         ERROR: Failed to download metadata for repo 'xxx':
#                Checksum error...: Unable to read zchunk lead
#           FIX: Added 'zchunk=false' to 'dnf.conf'
#            OR: Change root to <chroot-dir> and run 'dnf clean all'
#
# LIBVIRT:
#     Build fails due to too many processors (too fast)?
#
#         cp -fp ~/.rpmmacros chroot-dom0-fc32/home/user/.rpmmacros
#
################################################################################

INCLUDE_OVERRIDE_CONF ?= false
#INCLUDE_OVERRIDE_CONF := true

RELEASE := 4.1

ifdef INCLUDE_OVERRIDE_CONF
  SSH_ACCESS := 1
else
  SSH_ACCESS := 0
  GIT_BASEURL := https://github.com
  GIT_PREFIX := QubesOS/qubes-
endif

# Fetch repositories with depth=1
GIT_CLONE_FAST ?= 0

# A Qubes master configuration file will be included based on selected RELEASE
#
# A copy of BUILDER_PLUGINS will be made and restored since the BUILDER_PLUGIN
# variable gets over-written in qubes-os-master.conf.
_ORIGINAL_BUILDER_PLUGINS := $(BUILDER_PLUGINS)
ifeq ($(RELEASE), 2)
  -include example-configs/qubes-os-r2.conf
else ifeq ($(RELEASE), 3)
  -include example-configs/qubes-os-r3.0.conf
else ifeq ($(RELEASE), 3.1)
  -include example-configs/qubes-os-r3.1.conf
else ifeq ($(RELEASE), 3.2)
  -include example-configs/qubes-os-r3.2.conf
else ifeq ($(RELEASE), 4.0)
  -include example-configs/qubes-os-r4.0.conf
else
  -include example-configs/qubes-os-master.conf
endif
BUILDER_PLUGINS := $(_ORIGINAL_BUILDER_PLUGINS) $(BUILDER_PLUGINS)
BACKEND_VMM := kvm

# [=setup plugins start=]

# Additional BUILDER_PLUGINS
##BUILDER_PLUGINS += template-whonix

# [=setup plugins stop=]

# Put all the enabled plugins into components to download them. But avoid
# duplicates
_temp_components := $(COMPONENTS)
COMPONENTS += $(filter-out $(_temp_components), $(BUILDER_PLUGINS))

################################################################################
##
## KVM CONFIGURATION
##


# NOTE:  TEMP:  Remove vmm-xen component from XEN-COMPONENTS on first build to 
#               satisfy build depends in other components that have not yet been
#               removed.
XEN_COMPONENTS = \
    vmm-xen \
    intel-microcode \
    linux-firmware \
    gui-agent-xen-hvm-stubdom \
    seabios \
    vmm-xen-stubdom-legacy \
    vmm-xen-stubdom-linux

ISO_COMPONENTS = \
    installer-qubes-os \
    qubes-release \
    pykickstart \
    blivet \
    lorax \
    lorax-templates \
    pungi \
    anaconda \
    anaconda-addon \
    linux-yum \
    linux-deb \
    tpm-extra \
    trousers-changer \
    antievilmaid

# Remove Xen and Qubes ISO only components
COMPONENTS := $(filter-out $(XEN_COMPONENTS),$(COMPONENTS))
COMPONENTS := $(filter-out $(ISO_COMPONENTS),$(COMPONENTS))

# Replace xen with kvm components
COMPONENTS := $(subst core-vchan-xen, core-vchan-libkvmchan core-vchan-kvm,$(COMPONENTS))
COMPONENTS := kvm $(COMPONENTS)

BRANCH_kvm                        = master
BRANCH_core_libvirt               = kvm
BRANCH_core_vchan_libkvmchan      = master
BRANCH_core_vchan_kvm             = master
BRANCH_core_qubesdb               = kvm
BRANCH_core_qrexec                = kvm
BRANCH_linux_utils                = kvm
BRANCH_core_admin                 = kvm
BRANCH_core_agent_linux           = kvm
BRANCH_linux_kernel               = vfio_noiommu
BRANCH_builder_debian             = nrgaway
BRANCH_builder                    = nrgaway
BRANCH_kvm_dev                    = nrgaway

#BRANCH_gui_common                 = kvm
#BRANCH_gui_daemon                 = kvm
#BRANCH_gui_agent_linux            = kvm
##
################################################################################

BUILDER_TURBO_MODE = 0
#DEBUG = 0
#VERBOSE = 1
DEBUG = 2
VERBOSE = 2
NO_SIGN = 1

DIST_DOM0 ?= fc32

# Only build templates (comment out or set to '0' to build all of Qubes).
TEMPLATE_ONLY ?= 0

################################################################################
#                     L I S T   O F   D I S T   V M ' S
################################################################################
# Available template flavors may be added the the template build by appending
# `+flavor_name`

# [=setup dists start=]
ifneq "$(SETUP_MODE)" "1"

  # Enabled DISTS_VMs
  DISTS_VM :=
  DISTS_VM += fc32
  #DISTS_VM += buster

endif
# [=setup dists stop=]

## USE_DIST_BUILD_TOOLS
##   Need to install 'mock' install depend
USE_DIST_BUILD_TOOLS := 0

#DISTS_VM += bullseye+gnome
#DISTS_VM += whonix-gateway-15
#DISTS_VM += whonix-workstation-15

#COMPONENTS += linux-kernel-latest
#GIT_URL_linux_kernel_latest = $(GIT_BASEURL)/$(GIT_PREFIX)linux-kernel
#BRANCH_linux_kernel_latest = master
BRANCH_linux_kernel = master
##
################################################################################

################################################################################
#                        M I S C E L L A N E O U S
################################################################################
# Qubes-builder deps
DEPENDENCIES ?=
DEPENDENCIES += git rpmdevtools rpm-build createrepo perl-Digest-MD5 perl-Digest-SHA

# For USE_DIST_BUILD_TOOLS
DEPENDENCIES += mock

# Additional for debian template
DEPENDENCIES += debootstrap dpkg-dev

# for ./setup
DEPENDENCIES += python3-sh dialog

# TEMP KVM depend for core-vchan-libkvmchan
# https://github.com/ingydotnet/git-subrepo
DEPENDENCIES += git-subrepo

# Uncomment the the following to enable override.conf include.  Setup will
# automatically enable it only if an override is available and selected by
# user to enable.
#INCLUDE_OVERRIDE_CONF ?= true
#ifdef INCLUDE_OVERRIDE_CONF
#  -include override.conf
#endif


.PHONY: about release
about::
	@echo "builder.conf"

release:
	@echo "$(RELEASE)"

# vim: filetype=make
