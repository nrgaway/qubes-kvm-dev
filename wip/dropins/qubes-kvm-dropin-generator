#!/bin/bash
# vim: set syntax=sh ts=4 sw=4 sts=4 et :

# /etc/systemd/system-generators/qubes-kvm-dropin-generator
#
# NOTES:
#
#   - 'systemctl daemon-reload' will activate changes made within this
#      generator.

declare -ir false=0 true=1
DEBUG=false

# ==============================================================================
# Return single quoted string
# ==============================================================================
quote () {
    printf "'%s'" "$@"
}

# ==============================================================================
# DO FAIL
# ==============================================================================
do_fail() {
    printf 'qubes-kvm-dropin-generator: %s\n' "$*" > /dev/kmsg
    exit 1
}

# ==============================================================================
# Generate systemd drop-in
# ==============================================================================
generate_dropin () {
    local source_dropin_path="${1}"
    local unit_dir="${2:-"$UNIT_DIR"}"
    local generator_dir="${3:-"$GENERATOR_DIR"}"
    local source_dropin_dir source_dropin_name dropin_conf
    local target_dropin_dir target_dropin_name target_dropin_path

    source_dropin_dir="$(dirname "$source_dropin_path")"
    source_dropin_name="$(basename "$source_dropin_path")"

    target_dropin_dir="${source_dropin_dir%*.in}.d"                         #.in
    target_dropin_dir="${generator_dir}${target_dropin_dir/$unit_dir/}"
    target_dropin_name="${source_dropin_name%*.in}"                         #.in
    target_dropin_path="${target_dropin_dir}/${target_dropin_name}"

    # --- TEST -----------------------------------------------------------------
    local source_unit_path source_unit_name target_unit_path
    source_unit_path="${source_dropin_dir%*.in}"                            #.in
    source_unit_name="$(basename "${source_unit_path}")"
    target_unit_path="${generator_dir}/${source_unit_name}"
    ########

    # --- TEST -----------------------------------------------------------------
    local wants wants_dir
    wants="$(cat "$source_unit_path" | grep -Po '(?<=WantedBy=)\S+')"
    wants="${wants}.wants"
    wants_dir="${generator_dir}/${wants}"
    ########

    if (( DEBUG )); then
        #echo "          UNIT_DIR: $unit_dir"
        echo "SOURCE_DROPIN_NAME: $source_dropin_name"
        echo "SOURCE_DROPIN_PATH: $source_dropin_path"
        echo " SOURCE_DROPIN_DIR: $source_dropin_dir"
        echo ""
        echo "TARGET_DROPIN_NAME: $target_dropin_name"
        echo "TARGET_DROPIN_PATH: $target_dropin_path"
        echo " TARGET_DROPIN_DIR: $target_dropin_dir"
        ## TEST:
        echo ""
        echo "  SOURCE_UNIT_NAME: $source_unit_name"  # TEST
        echo "  SOURCE_UNIT_PATH: $source_unit_path"  # TEST
        echo "  TARGET_UNIT_PATH: $target_unit_path"  # TEST
        echo ""
        echo "             WANTS: |$wants|"
        echo "         WANTS_DIR: $wants_dir"
        ########
    fi

    dropin_conf="# Automatically generated by qubes-kvm-dropin-generator\n"
    dropin_conf+="# from $(quote "${source_dropin_path}")\n\n"
    dropin_conf+=$(<"${source_dropin_path}")

    if (( DEBUG )); then
        echo ""
        echo "================================================================="
        echo -e "$dropin_conf"
    fi

    mkdir -p "${target_dropin_dir}"
    echo -e "$dropin_conf" > "$target_dropin_path"

    # --- SOFTLINK -------------------------------------------------------------
#    cp -f "$source_unit_path" "$target_unit_path"
#    mkdir -p "$wants_dir"
#    #ln -sf "${target_unit_path}" "${wants_dir}/${source_unit_name}"
#    ln -sf "${source_unit_path}" "${wants_dir}/${source_unit_name}"
}


# see systemd.generator
if [ $# -eq 0 ] ; then
    GENERATOR_DIR="/tmp"
    #UNIT_DIR="/lib/systemd/system"
    UNIT_DIR="/tmp/lib/systemd/system"
elif [ $# -eq 3 ] ; then
    #$1=normal-dir, $2=early-dir, $3=late-dir
    GENERATOR_DIR="${1}"  # /run/systemd/generator
    #GENERATOR_DIR="${2}"  # /run/systemd/generator
    UNIT_DIR="/lib/systemd/system"
else
    do_fail "zero or three arguments required"
fi


readarray -t dropin_templates <<<"$(ls -1 "$UNIT_DIR"/*/*qubes-kvm.conf.in)"
for dropin_template in "${dropin_templates[@]}"; do
    generate_dropin "$dropin_template" "$UNIT_DIR" "$GENERATOR_DIR"
done

exit 0
